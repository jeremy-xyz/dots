diff --git a/config.def.h b/config.def.h
index 1c0b587..c4d5d3e 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,17 +1,22 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
+static const unsigned int gappih      = 20;       /* horiz inner gap between windows */
+static const unsigned int gappiv      = 20;       /* vert inner gap between windows */
+static const unsigned int gappoh      = 23;       /* horiz outer gap between windows and screen edge */
+static const unsigned int gappov      = 23;       /* vert outer gap between windows and screen edge */
+static const int smartgaps            = 1;        /* 1 means no outer gap when there is only one window */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const char *fonts[]          = { "monospace:size=13", "JoyPixels:pixelsize=13:antialias=true:autohint=true"  };
+static const char dmenufont[]       = "monospace:size=13";
+static const char col_gray1[]       = "#15171b"; /* main bar1 */
+static const char col_gray2[]       = "#000000"; /* unfocus border */
+static const char col_gray3[]       = "#96b5b4"; /* fg normal status */
+static const char col_gray4[]       = "#a3be8c"; /* fg focus tag and xwindow */
+static const char col_cyan[]        = "#15171b"; /* main focus bar2 */
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
@@ -19,23 +24,31 @@ static const char *colors[][3]      = {
 };
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+/* static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" }; */
+static const char *tags[] = { "1:", "2:", "3:", "4:", "5:", "6:", "7:", "8:", "9:" };
 
 static const Rule rules[] = {
 	/* xprop(1):
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class                   instance                    title       tags mask     iscentered     isfloating   monitor */
+    { "Gimp",                  NULL,                       NULL,       1 << 6,       1,             1,           -1 },
+    { "firefox",               NULL,                       NULL,       0,            0,             0,           -1 },
+    { "Steam",                 NULL,                       NULL,       1 << 3,       1,             1,           -1 },
+    { "discord",               NULL,                       NULL,       1 << 5,       0,             0,           -1 },
+    { "Terraria.bin.x86",      NULL,                       NULL,       1 << 4,       0,             0,           -1 },
+    { "dota2",                 NULL,                       NULL,       1 << 4,       0,             0,           -1 },
+    { "steam_app_292030",      NULL,                       NULL,       1 << 4,       0,             0,           -1 },
+    { "steam_app_294100",      NULL,                       NULL,       1 << 4,       0,             0,           -1 },
 };
 
 /* layout(s) */
-static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const float mfact     = 0.50; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 
+#include "vanitygaps.c"
 static const Layout layouts[] = {
 	/* symbol     arrange function */
 	{ "[]=",      tile },    /* first entry is default */
@@ -44,7 +57,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -59,20 +72,21 @@ static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn()
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
 
+#include <X11/XF86keysym.h>
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
+    { MODKEY,                       XK_d,      spawn,          {.v = dmenucmd } },
+    { MODKEY,                       XK_Return, spawn,          {.v = termcmd } },
+    { MODKEY|ShiftMask,             XK_t,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
+    { MODKEY,                       XK_o,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
+    { MODKEY|ShiftMask,             XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
+    { MODKEY,                       XK_q,      killclient,     {0} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
@@ -94,6 +108,37 @@ static Key keys[] = {
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+    { MODKEY,                       XK_g,      togglegaps,     {0} },
+    { MODKEY,                       XK_x,	   spawn,          SHCMD("dprompt \"Hey Fucker! Are you sure you want to shutdown?\" \"sudo -A systemctl poweroff\"") },
+    { MODKEY,                       XK_r,	   spawn,          SHCMD("dprompt \"Want to reboot MotherFucker!?\" \"sudo -A systemctl reboot\"") },
+    { MODKEY|ShiftMask,             XK_Escape, spawn,          SHCMD("dprompt \"You dumbfuck wanna kill Xorg?\" \"killall Xorg\"") },
+    { MODKEY,                       XK_F8,     spawn,          SHCMD("mailsync") },
+    { MODKEY,                       XK_F9,     spawn,          SHCMD("dmount") },
+    { MODKEY,                       XK_F10,    spawn,          SHCMD("dumount") },
+    { MODKEY,                       XK_F11,    spawn,          SHCMD("dmenurecord") },
+    { MODKEY,                       XK_F12,    spawn,          SHCMD("dmenurecord kill") },
+    { MODKEY,                       XK_Insert, spawn,          SHCMD("showclip") },
+    { MODKEY,                       XK_grave,  spawn,          SHCMD("dunicode") },
+    { MODKEY,                       XK_b,      spawn,          SHCMD("$BROWSER") },
+    { MODKEY,                       XK_e,      spawn,          SHCMD("st -e vu") },
+    { MODKEY,                       XK_n,      spawn,          SHCMD("st -e newsboat") },
+    { MODKEY|ShiftMask,             XK_m,      spawn,          SHCMD("st -e neomutt") },
+    { MODKEY,                       XK_c,      spawn,          SHCMD("st -e calcurse") },
+    { MODKEY,                       XK_p,      spawn,          SHCMD("mpc toggle") },
+    { MODKEY|ShiftMask,             XK_p,      spawn,          SHCMD("st -e ncmpcpp") },
+    { MODKEY,                       XK_equal,  spawn,          SHCMD("amixer sset Master 5%+") },
+    { MODKEY,                       XK_minus,  spawn,          SHCMD("amixer sset Master 5%-") },
+    { MODKEY,                       XK_comma,  spawn,          SHCMD("mpc prev") },
+    { MODKEY,                       XK_period, spawn,          SHCMD("mpc next") },
+    { MODKEY,                       XK_bracketleft,   spawn,   SHCMD("mpc seek -10") },
+    { MODKEY,                       XK_bracketright,  spawn,   SHCMD("mpc seek +10") },
+    { ShiftMask,                    XK_Print,  spawn,          SHCMD("maimpick") },
+    { MODKEY|ShiftMask,             XK_g,      spawn,          SHCMD("sudo -A gparted") },
+
+    { 0,                            XK_Print,  spawn,          SHCMD("maim pic-full-$(date '+%y%m%d-%H%M-%S').png") },
+    { 0,	XF86XK_AudioMute,                  spawn,          SHCMD("amixer sset Master toggle") },
+    { 0,	XF86XK_AudioRaiseVolume,           spawn,          SHCMD("amixer sset Master 5%+ ; pkill -RTMIN+10") },
+    { 0,	XF86XK_AudioLowerVolume,           spawn,          SHCMD("amixer sset Master 5%- ; pkill -RTMIN+10") },
 };
 
 /* button definitions */
